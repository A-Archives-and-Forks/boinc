#! /usr/bin/env php
<?php

// submit a job for the Docker universal app (which must be named 'buda')
//
// submit_buda [--buda_dir dir] [--verbose] infile ...
//
// the buda dir (default buda_dir/) must contain
// - buda_in, buda_out: input, output templates
// - other files; typically
//      a Dockerfile
//      job.toml
//      main.sh script
//      science executable
// - file_list
//      a list of the other filenames (one per line)
//      in the order of the input template

$buda_dir = 'buda_dir';
$infiles = [];
$verbose = false;

for ($i=1; $i<$argc; $i++) {
    if ($argv[$i] == '--buda_dir') {
        $buda_dir = $argv[++$i];
    } else if ($argv[$i] == '--verbose') {
        $verbose = true;
    } else {
        $infiles[] = $argv[$i];
    }
}

if (!file_exists("$buda_dir/template_in")) {
    die("no input template\n");
}
if (!file_exists("$buda_dir/template_out")) {
    die("no output template\n");
}
$file_list = file("$buda_dir/file_list");
if (!$file_list) {
    die("no file list\n");
}

$cmd = "bin/submit_job --templates $buda_dir/template_in $buda_dir/template_out buda";

foreach ($file_list as $fname) {
    $fname = trim($fname);
    if (!file_exists("$buda_dir/$fname")) {
        die("missing app file '$buda_dir/$fname'\n");
    }
    $cmd .= " $buda_dir/$fname";
}

foreach ($infiles as $path) {
    if (!file_exists("$path")) {
        die("missing input file $path\n");
    }
    $cmd .= " $path";
}

if ($verbose) {
    echo "cmd: $cmd\n";
    $cmd .= " --verbose";
}

if (system($cmd, $ret) === false) {
    die("system($cmd) failed\n");
}
if ($ret) {
    die("$cmd returned $ret\n");
}

?>
