#! /usr/bin/env php
<?php

// submit a job for the Docker universal app (which must be named 'buda')
//
// submit_buda [--buda_dir dir] infile ...
// 
// the buda dir (default buda/) must contain
// - buda_in, buda_out: input, output templates
// - other files; typically
//      a Dockerfile
//      job.toml
//      main.sh script
//      science executable
// - file_list
//      a list of the other filenames (one per line)
//      in the order of the input template

$buda_dir = 'buda';
$infiles = [];
for ($i=1; $i<$argc; $i++) {
    if ($argv[$i] == '--buda_dir') {
        $buda_dir = $argv[++$i];
    } else {
        $infiles[] = $argv[$i];
    }
}

if (!file_exists("$buda_dir/buda_in")) {
    die("no input template\n");
}
if (!file_exists("$buda_dir/buda_out")) {
    die("no output template\n");
}
$file_list = file("$buda_dir/file_list");
if (!$file_list) {
    die("no file list\n");
}

$cmd = "bin/submit_job --dir $buda_dir --template buda buda";

foreach ($file_list as $fname) {
    $fname = trim($fname);
    if (!file_exists("$buda_dir/$fname")) {
        die("missing app file '$buda_dir/$fname'\n");
    }
    $cmd .= " $fname";
}

foreach ($infiles as $fname) {
    if (!file_exists("$fname")) {
        die("missing input file $fname\n");
    }
    $cmd .= " $fname";
}

echo "cmd: $cmd\n";

if (system($cmd, $ret) === false) {
    die("system($cmd) failed\n");
}
if ($ret) {
    die("$cmd returned $ret\n");
}

?>
